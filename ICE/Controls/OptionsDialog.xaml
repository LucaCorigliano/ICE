<?xml version="1.0" encoding="utf-8"?><toolkit:ToolkitDialog x:Class="Microsoft.Research.ICE.Controls.OptionsDialog" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="Microsoft.Research.ICE.Controls" xmlns:toolkit="clr-namespace:Microsoft.Research.VisionTools.Toolkit.Desktop;assembly=Microsoft.Research.VisionTools.Toolkit.Desktop" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" Icon="/Images/Window.ico" Title="Options" Width="475" SizeToContent="Height" SnapsToDevicePixels="True">    <FrameworkElement.Resources>            <ResourceDictionary>      <toolkit:VisibilityConverter x:Key="visibilityConverter" />      <Style x:Key="groupBorderStyle" TargetType="{x:Type Border}">        <Setter Property="Margin" Value="6" />        <Setter Property="BorderThickness" Value="1" />        <Setter Property="BorderBrush" Value="#FFAFB1B5" />        <Setter Property="Border.CornerRadius" Value="6,6,6,6" />        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />      </Style>      <Style x:Key="cacheLocationItemContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">        <Setter Property="IsEnabled" Value="{Binding IsEditable}" />        <EventSetter Event="MouseDoubleClick" Handler="CacheLocationListBoxItem_MouseDoubleClick" />      </Style>      <DataTemplate x:Key="cacheLocationDataTemplate">        <Grid>          <Grid.ColumnDefinitions>            <ColumnDefinition Width="Auto" />            <ColumnDefinition Width="*" />          </Grid.ColumnDefinitions>          <Rectangle Name="boxNumber" Stroke="{DynamicResource ContentBorder.Background}" StrokeThickness="1" HorizontalAlignment="Stretch" Margin="-4,-3,0,-3" VerticalAlignment="Stretch" Width="26" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />          <TextBlock Name="numberText" Foreground="{DynamicResource ContentBorder.Background}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-4,0,0,0" FontWeight="SemiBold" Text="{Binding Number}" />          <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="5,0,0,0" TextTrimming="CharacterEllipsis" ToolTipService.ShowOnDisabled="True" ToolTipService.Placement="Relative" ToolTipService.HorizontalOffset="-7" ToolTipService.VerticalOffset="-5">            <FrameworkElement.ToolTip>              <TextBlock>                <Run FontWeight="Bold" Text="{Binding DirectoryPath, Mode=OneWay}" /> <Run Text=" " /> <Run FontWeight="Bold" Text="{Binding InUseMessage, Mode=OneWay}" /><LineBreak /><Run Text="{Binding DiskSpaceMessage, Mode=OneWay}" /></TextBlock>            </FrameworkElement.ToolTip>            <Run FontWeight="Bold" Text="{Binding DirectoryPath, Mode=OneWay}" /> <Run Text=" " /> <Run FontWeight="Bold" Text="{Binding InUseMessage, Mode=OneWay}" /><LineBreak /><Run Name="MessageHighlight" Foreground="{DynamicResource ListBoxItem.Normal.Foreground}" Text="{Binding DiskSpaceMessage, Mode=OneWay}" /></TextBlock>          <Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource ContentBorder.Background}" HorizontalAlignment="Stretch" Height="1" Margin="-4,0,-4,-2" VerticalAlignment="Bottom" />        </Grid>        <DataTemplate.Triggers>          <DataTrigger Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">            <Setter TargetName="boxNumber" Value="{DynamicResource ListBoxItem.SelectedInactive.Background}" Property="Shape.Fill" />          </DataTrigger>          <MultiDataTrigger>            <MultiDataTrigger.Conditions>              <Condition Value="True" Binding="{Binding HasError}" />              <Condition Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />            </MultiDataTrigger.Conditions>            <Setter TargetName="MessageHighlight" Value="{DynamicResource ContentBorder.Background}" Property="TextElement.Foreground" />          </MultiDataTrigger>          <MultiDataTrigger>            <MultiDataTrigger.Conditions>              <Condition Value="True" Binding="{Binding HasError}" />              <Condition Value="False" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />            </MultiDataTrigger.Conditions>            <Setter TargetName="MessageHighlight" Property="TextElement.Foreground" Value="#ffff9c00" />          </MultiDataTrigger>          <MultiDataTrigger>            <MultiDataTrigger.Conditions>              <Condition Value="False" Binding="{Binding HasError}" />              <Condition Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />            </MultiDataTrigger.Conditions>            <Setter TargetName="MessageHighlight" Value="{DynamicResource ContentBorder.Background}" Property="TextElement.Foreground" />          </MultiDataTrigger>          <DataTrigger Value="True" Binding="{Binding HasError}">            <Setter TargetName="boxNumber" Property="Shape.Fill" Value="#ffff9c00" />          </DataTrigger>          <MultiDataTrigger>            <MultiDataTrigger.Conditions>              <Condition Value="True" Binding="{Binding HasError}" />              <Condition Value="False" Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />            </MultiDataTrigger.Conditions>            <Setter TargetName="MessageHighlight" Property="TextElement.Foreground" Value="#ffff9c00" />          </MultiDataTrigger>          <MultiDataTrigger>            <MultiDataTrigger.Conditions>              <Condition Value="False" Binding="{Binding HasError}" />              <Condition Value="False" Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" />            </MultiDataTrigger.Conditions>            <Setter TargetName="MessageHighlight" Value="{DynamicResource ListBoxItem.Normal.Foreground}" Property="TextElement.Foreground" />          </MultiDataTrigger>        </DataTemplate.Triggers>      </DataTemplate>    </ResourceDictionary>  </FrameworkElement.Resources>  <StackPanel Margin="20,20,20,10">    <GroupBox Header="Memory consumption">      <Grid>        <Grid.ColumnDefinitions>          <ColumnDefinition Width="Auto" />          <ColumnDefinition Width="5" />          <ColumnDefinition Width="Auto" />          <ColumnDefinition Width="*" />        </Grid.ColumnDefinitions>        <Grid.RowDefinitions>          <RowDefinition Height="Auto" />          <RowDefinition Height="10" />          <RowDefinition Height="Auto" />        </Grid.RowDefinitions>        <Label Content="_Memory consumption limit" HorizontalAlignment="Right" VerticalAlignment="Center" Target="{Binding ElementName=memoryLimitTextBox}" />        <StackPanel Orientation="Horizontal" Grid.Column="2">          <toolkit:TextBoxPlus Name="memoryLimitTextBox" IsInDialog="True" Width="50" VerticalAlignment="Center" HorizontalContentAlignment="Right" Text="{Binding MemoryConsumptionLimit, FallbackValue=512}" />          <TextBlock Text="MB" Margin="2,0,0,0" VerticalAlignment="Center" />        </StackPanel>        <TextBlock Text="Total memory" Grid.Row="2" />        <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right" Text="{Binding TotalMemoryMessage, FallbackValue='8,192 MB'}" />        <TextBlock Grid.Row="2" Grid.Column="3" HorizontalAlignment="Left" Text="{Binding MaxMemoryConsumptionLimit, StringFormat='(32-bit ICE can use at most {0:N0} MB)', FallbackValue='(32-bit ICE can use at most 2,048 MB)'}" Visibility="{Binding Is32Bit, Converter={StaticResource visibilityConverter}, FallbackValue=Visible}" />        <Button Name="memoryResetButton" Grid.Column="3" Content="Reset" MinWidth="75" HorizontalAlignment="Right" VerticalAlignment="Top" ToolTip="Use default memory consumption limit" />      </Grid>    </GroupBox>    <GroupBox Header="Temporary file locations" Margin="0,20,0,0">      <Grid>        <Grid.RowDefinitions>          <RowDefinition Height="Auto" />          <RowDefinition Height="10" />          <RowDefinition Height="Auto" />          <RowDefinition Height="5" />          <RowDefinition Height="Auto" />        </Grid.RowDefinitions>        <Button Name="cacheResetButton" Content="Reset" MinWidth="75" HorizontalAlignment="Right" ToolTipService.ShowOnDisabled="True" IsEnabled="{Binding CanResetCacheLocations}" ToolTip="{Binding CacheResetMessage}" />        <ListBox Name="cacheLocationsListBox" Grid.Row="2" MinWidth="300" Height="200" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.PanningMode="VerticalOnly" ItemTemplate="{StaticResource cacheLocationDataTemplate}" ItemContainerStyle="{DynamicResource cacheLocationItemContainerStyle}" HorizontalContentAlignment="Stretch" ItemsSource="{Binding ImageCacheLocations}" SelectionChanged="CacheFolder_SelectionChanged"/>        <UniformGrid Name="btnGrid" Grid.Row="4" Rows="1">          <Button Name="Add" Content="_Add..." Click="Add_Executed" />          <Button Name="Change" Content="_Change..." IsEnabled="False" Click="Change_Executed" Margin="5,0,0,0" />          <Button Name="Remove" Content="_Remove" IsEnabled="False" Click="Delete_Executed" Margin="5,0,0,0" />          <Button Name="Up" Content="_Up" IsEnabled="False" Click="MoveUp_Executed" Margin="5,0,0,0" />          <Button Name="Down" Content="_Down" IsEnabled="False" Click="MoveDown_Executed" Margin="5,0,0,0" />        </UniformGrid>      </Grid>    </GroupBox>    <GroupBox Header="Updates" Margin="0,20,0,0">      <CheckBox Content="Check for updates each time _ICE starts" HorizontalAlignment="Left" IsChecked="{Binding CheckForUpdatesAtStartup, FallbackValue=True}" />    </GroupBox>    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">      <Button Name="okButton" Content="OK" IsDefault="True" Width="75" />      <Button Name="cancelButton" Content="Cancel" IsCancel="True" Margin="5,0,0,0" Width="75" />    </StackPanel>    </StackPanel></toolkit:ToolkitDialog>